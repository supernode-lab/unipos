{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x304ecEA262847F902Be52C2CA9E621DD54d181Ff",
      "txHash": "0xea55d9c62f9396c9f7cfc06e79cd4c149d70995232ae9e12a1ca1d5a8154fa24",
      "kind": "uups"
    },
    {
      "address": "0x901A724d2F4cAEfbeDf50b4C781c7058415B336E",
      "txHash": "0x41bfbd4a6225e4a68721d461805f68d336c7f86ddf4faee309e04706bb22f35b",
      "kind": "uups"
    },
    {
      "address": "0xd6E02fd8D1191204D37F9c2f8394a1887A35EFC6",
      "txHash": "0x67bb0c847f86c318d59b27ce8ac0234cb077d08fa9dabcfd4212c8047daf16dd",
      "kind": "uups"
    }
  ],
  "impls": {
    "35d57097946cbfe41d0c2c12f24013e9d0724afaf487ed3225c3533bab1a6057": {
      "address": "0xD9694E94857Fcd8c88396d79Ab8Dd719E459f7e7",
      "txHash": "0xe016230aae1fb35cd99cf444fd80c433d37606111ca5b2a75858cfca1b870f40",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "core",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:77"
          },
          {
            "label": "pToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPToken)13765",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:78"
          },
          {
            "label": "miningToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)2380",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:79"
          },
          {
            "label": "maxPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:81"
          },
          {
            "label": "withdrawBufferPercentage",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:82"
          },
          {
            "label": "withdrawalRequestQueue",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(WithdrawalRequest)8698_storage)dyn_storage",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:85"
          },
          {
            "label": "withdrawalRequestIdsByUser",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:86"
          },
          {
            "label": "withdrawalStorage",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(WithdrawalRequestStorage)8703_storage",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:87"
          },
          {
            "label": "orders",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_struct(Order)8718_storage)dyn_storage",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:93"
          },
          {
            "label": "headIdx",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:94"
          },
          {
            "label": "totalDebt",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:97"
          },
          {
            "label": "totalDebtShares",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:98"
          },
          {
            "label": "debtShares",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:99"
          },
          {
            "label": "lastAccrueTimeStamp",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:101"
          },
          {
            "label": "autoOrderMatchCount",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:102"
          },
          {
            "label": "feeRate",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:103"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_address",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:104"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DelegationPoolStorage",
            "src": "src/contracts/core/DelegationPool.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Order)8718_storage)dyn_storage": {
            "label": "struct IDelegationPool.Order[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)8698_storage)dyn_storage": {
            "label": "struct IDelegationPool.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)2380": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPToken)13765": {
            "label": "contract IPToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Order)8718_storage": {
            "label": "struct IDelegationPool.Order",
            "members": [
              {
                "label": "agent",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "debtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedDebtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "debtShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "nextOrderIdx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)8698_storage": {
            "label": "struct IDelegationPool.WithdrawalRequest",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "shares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fullfilled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(WithdrawalRequestStorage)8703_storage": {
            "label": "struct IDelegationPool.WithdrawalRequestStorage",
            "members": [
              {
                "label": "totalSharesInQueue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "aaf7e02f5891a49f0e493ac80921c2323038bc3813748af69b8d587b38cae53a": {
      "address": "0x906Be35e3162f1c8E4B6EB86FFbA111e0f270319",
      "txHash": "0xcbcafbc990538dc44ef5db9182c7b53da081a9b8867272681e757f3a3af0920a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "delegationPool",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDelegationPool)8822",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:11"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:13"
          },
          {
            "label": "agentType",
            "offset": 20,
            "slot": "1",
            "type": "t_enum(AgentType)13394",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:14"
          },
          {
            "label": "pToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IPToken)13765",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:15"
          },
          {
            "label": "miningToken",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20)2380",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:16"
          },
          {
            "label": "allowanceBuffer",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:17"
          },
          {
            "label": "collateralValueLimit",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:18"
          },
          {
            "label": "liquidationThreshold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:19"
          },
          {
            "label": "agentList",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:22"
          },
          {
            "label": "agentDetails",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(AgentDetail)13417_storage)",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:24"
          },
          {
            "label": "agentLoans",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(AgentLoanData)13426_storage)",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:25"
          },
          {
            "label": "agentDelegatedBalances",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:26"
          },
          {
            "label": "agentImplementation",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:28"
          },
          {
            "label": "minerAgentsByOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:31"
          },
          {
            "label": "_activedMap",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:33"
          },
          {
            "label": "rewardWithdrawPercentage",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Storage",
            "src": "src/contracts/core/modules/Storage.sol:38"
          },
          {
            "label": "signers",
            "offset": 0,
            "slot": "65",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SafeAdaptor",
            "src": "src/contracts/core/modules/SafeAdaptor.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "66",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SafeAdaptor",
            "src": "src/contracts/core/modules/SafeAdaptor.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "116",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Core",
            "src": "src/contracts/core/Core.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDelegationPool)8822": {
            "label": "contract IDelegationPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2380": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPToken)13765": {
            "label": "contract IPToken",
            "numberOfBytes": "20"
          },
          "t_enum(AgentStatus)13399": {
            "label": "enum AgentStatus",
            "members": [
              "Inactive",
              "Active",
              "Liquidating",
              "PendingRetrieved"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(AgentType)13394": {
            "label": "enum AgentType",
            "members": [
              "Miner",
              "Address"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AgentDetail)13417_storage)": {
            "label": "mapping(address => struct AgentDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AgentLoanData)13426_storage)": {
            "label": "mapping(address => struct AgentLoanData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AgentDetail)13417_storage": {
            "label": "struct AgentDetail",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "agent",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minerId",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "safePledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "recoveredPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(AgentStatus)13399",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(AgentLoanData)13426_storage": {
            "label": "struct AgentLoanData",
            "members": [
              {
                "label": "loanSafePledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "loanOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "securityDeposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "loanData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "ccbb13372f1975be8cc2e778973ea6b4438a28a16969bbdcb63f9d23d1ba6881": {
      "address": "0x3812fA8c9488C33cee917A0f761b5DEdAB603Dbc",
      "txHash": "0x81e803fc9b7846bbb5c083862e23fa11448f47a52dc7013e3958da42042a3388",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "core",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(ICore)14166",
            "contract": "DataViewHelper",
            "src": "src/periphery/DataViewHelper.sol:25"
          },
          {
            "label": "delegationPool",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDelegationPool)8822",
            "contract": "DataViewHelper",
            "src": "src/periphery/DataViewHelper.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DataViewHelper",
            "src": "src/periphery/DataViewHelper.sol:28"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_contract(ICore)14166": {
            "label": "contract ICore",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationPool)8822": {
            "label": "contract IDelegationPool",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:23"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
